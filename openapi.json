{
  "components": {
    "schemas": {
      "Bbox": {
        "description": "Bbox",
        "properties": {
          "bbox": {
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Bbox",
            "type": "array"
          },
          "crs": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BboxDefCrs"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "bbox"
        ],
        "title": "Bbox",
        "type": "object"
      },
      "Bbox1": {
        "description": "Bbox1",
        "properties": {
          "bbox": {
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Bbox",
            "type": "array"
          },
          "crs": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BboxDefCrs"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "bbox"
        ],
        "title": "Bbox1",
        "type": "object"
      },
      "BboxDefCrs": {
        "description": "BboxDefCrs",
        "properties": {
          "actual_instance": {
            "title": "Actual Instance"
          },
          "any_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "Any Of Schemas",
            "type": "array"
          },
          "anyof_schema_1_validator": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
            "title": "Anyof Schema 1 Validator"
          },
          "anyof_schema_2_validator": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
            "title": "Anyof Schema 2 Validator"
          }
        },
        "title": "BboxDefCrs",
        "type": "object"
      },
      "ConfClasses": {
        "description": "ConfClasses",
        "properties": {
          "conformsTo": {
            "items": {
              "type": "string"
            },
            "title": "Conformsto",
            "type": "array"
          }
        },
        "required": [
          "conformsTo"
        ],
        "title": "ConfClasses",
        "type": "object"
      },
      "Enumeration": {
        "description": "Enumeration",
        "properties": {
          "enum": {
            "items": {
              "type": "string"
            },
            "title": "Enum",
            "type": "array"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "enum"
        ],
        "title": "Enumeration",
        "type": "object"
      },
      "Exception": {
        "description": "JSON schema for exceptions based on RFC 7807",
        "properties": {
          "additional_properties": {
            "default": {},
            "title": "Additional Properties",
            "type": "object"
          },
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detail"
          },
          "instance": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instance"
          },
          "status": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Exception",
        "type": "object"
      },
      "Execute200Response-Input": {
        "anyOf": [
          {
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Bbox"
                },
                {
                  "items": {},
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/Link"
                },
                {
                  "$ref": "#/components/schemas/QualifiedInputValue-Input"
                }
              ]
            },
            "type": "object"
          },
          {
            "items": {},
            "type": "array"
          },
          {
            "type": "boolean"
          },
          {
            "format": "file-path",
            "type": "string"
          },
          {
            "type": "number"
          },
          {
            "type": "integer"
          },
          {
            "type": "object"
          },
          {
            "type": "string"
          }
        ],
        "title": "Execute200Response"
      },
      "Execute200Response-Output": {
        "anyOf": [
          {
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Bbox"
                },
                {
                  "items": {},
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/Link"
                },
                {
                  "$ref": "#/components/schemas/QualifiedInputValue-Output"
                }
              ]
            },
            "type": "object"
          },
          {
            "items": {},
            "type": "array"
          },
          {
            "type": "boolean"
          },
          {
            "format": "file-path",
            "type": "string"
          },
          {
            "type": "number"
          },
          {
            "type": "integer"
          },
          {
            "type": "object"
          },
          {
            "type": "string"
          }
        ],
        "title": "Execute200Response"
      },
      "ExecuteWorkflows": {
        "description": "ExecuteWorkflows",
        "properties": {
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "inputs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/InputWorkflows"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/OutputWorkflows"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "process": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "URI to the process execution end point (i.e., `.../processes/{processId}/execution`)",
            "title": "Process"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FieldsModifiersProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "sortBy": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sortby"
          },
          "subscriber": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Subscriber"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "ExecuteWorkflows",
        "type": "object"
      },
      "ExecutionUnit": {
        "description": "Resource containing an executable or runtime information for executing the process.",
        "properties": {
          "additional_properties": {
            "default": {},
            "title": "Additional Properties",
            "type": "object"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExecutionUnitConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "deployment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Deployment information for the execution unit.",
            "title": "Deployment"
          },
          "image": {
            "description": "Container image reference for the execution unit.",
            "title": "Image",
            "type": "string"
          },
          "type": {
            "description": "Type of execution unit.",
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "image"
        ],
        "title": "ExecutionUnit",
        "type": "object"
      },
      "ExecutionUnitConfig": {
        "description": "Hardware requirements and configuration properties for executing the process.",
        "properties": {
          "additional_properties": {
            "default": {},
            "title": "Additional Properties",
            "type": "object"
          },
          "cpuMax": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Maximum number of CPU dedicated to the process (unit is CPU core)",
            "title": "Cpumax"
          },
          "cpuMin": {
            "anyOf": [
              {
                "minimum": 1.0,
                "type": "number"
              },
              {
                "minimum": 1.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Minimum number of CPUs required to run the process (unit is CPU core).",
            "title": "Cpumin"
          },
          "jobTimeout": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timeout delay for a job execution (in seconds)",
            "title": "Jobtimeout"
          },
          "memoryMax": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Maximum RAM memory dedicated to the application (unit is GB)",
            "title": "Memorymax"
          },
          "memoryMin": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Minimum RAM memory required to run the application (unit is GB)",
            "title": "Memorymin"
          },
          "storageOutputsMin": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Minimum required output storage size (unit is GB)",
            "title": "Storageoutputsmin"
          },
          "storageTempMin": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Minimum required temporary storage size (unit is GB)",
            "title": "Storagetempmin"
          }
        },
        "title": "ExecutionUnitConfig",
        "type": "object"
      },
      "FieldsModifiersProperties": {
        "anyOf": [
          {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "title": "FieldsModifiersProperties"
      },
      "Format": {
        "description": "Format",
        "properties": {
          "encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Encoding"
          },
          "mediaType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mediatype"
          },
          "schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FormatSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "Format",
        "type": "object"
      },
      "FormatSchema": {
        "description": "FormatSchema",
        "properties": {
          "actual_instance": {
            "anyOf": [
              {},
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Instance"
          },
          "one_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "One Of Schemas",
            "type": "array"
          },
          "oneof_schema_1_validator": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 1 Validator"
          },
          "oneof_schema_2_validator": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 2 Validator"
          }
        },
        "title": "FormatSchema",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "HealthCheck": {
        "properties": {
          "status": {
            "const": "OK",
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "HealthCheck",
        "type": "object"
      },
      "InlineOrRefData-Input": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Bbox"
          },
          {
            "items": {},
            "type": "array"
          },
          {
            "type": "boolean"
          },
          {
            "type": "number"
          },
          {
            "type": "integer"
          },
          {
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/Link"
          },
          {
            "$ref": "#/components/schemas/QualifiedInputValue-Input"
          }
        ],
        "title": "InlineOrRefData"
      },
      "InlineOrRefData-Output": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Bbox"
          },
          {
            "items": {},
            "type": "array"
          },
          {
            "type": "boolean"
          },
          {
            "type": "number"
          },
          {
            "type": "integer"
          },
          {
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/Link"
          },
          {
            "$ref": "#/components/schemas/QualifiedInputValue-Output"
          }
        ],
        "title": "InlineOrRefData"
      },
      "InlineOrRefDataWorkflows": {
        "description": "InlineOrRefDataWorkflows",
        "properties": {
          "actual_instance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InputValueNoObjectWorkflows"
              },
              {
                "$ref": "#/components/schemas/Link"
              },
              {
                "$ref": "#/components/schemas/QualifiedInputValueWorkflows"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Instance"
          },
          "one_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "One Of Schemas",
            "type": "array"
          },
          "oneof_schema_1_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InputValueNoObjectWorkflows"
              },
              {
                "type": "null"
              }
            ]
          },
          "oneof_schema_2_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QualifiedInputValueWorkflows"
              },
              {
                "type": "null"
              }
            ]
          },
          "oneof_schema_3_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Link"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "InlineOrRefDataWorkflows",
        "type": "object"
      },
      "InputCollection": {
        "description": "InputCollection",
        "properties": {
          "collection": {
            "title": "Collection",
            "type": "string"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FieldsModifiersProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "sortBy": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sortby"
          }
        },
        "required": [
          "collection"
        ],
        "title": "InputCollection",
        "type": "object"
      },
      "InputDescription-Input": {
        "description": "InputDescription",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "maxOccurs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maxoccurs"
          },
          "metadata": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Metadata-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "minOccurs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 1,
            "title": "Minoccurs"
          },
          "schema": {
            "$ref": "#/components/schemas/ModelSchema-Input"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "valuePassing": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valuepassing"
          }
        },
        "required": [
          "schema",
          "maxOccurs"
        ],
        "title": "InputDescription",
        "type": "object"
      },
      "InputDescription-Output": {
        "description": "InputDescription",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "maxOccurs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maxoccurs"
          },
          "metadata": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Metadata-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "minOccurs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 1,
            "title": "Minoccurs"
          },
          "schema": {
            "$ref": "#/components/schemas/ModelSchema-Output"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "valuePassing": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valuepassing"
          }
        },
        "required": [
          "schema",
          "maxOccurs"
        ],
        "title": "InputDescription",
        "type": "object"
      },
      "InputParameterized": {
        "description": "InputParameterized",
        "properties": {
          "$input": {
            "title": "$Input",
            "type": "string"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FieldsModifiersProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "sortBy": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sortby"
          }
        },
        "required": [
          "$input"
        ],
        "title": "InputParameterized",
        "type": "object"
      },
      "InputProcess": {
        "description": "InputProcess",
        "properties": {
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "inputs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/InputWorkflows1"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/OutputWorkflows1"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "process": {
            "description": "URI to the process execution end point (i.e., `.../processes/{processId}/execution`)",
            "title": "Process",
            "type": "string"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FieldsModifiersProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "sortBy": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sortby"
          },
          "subscriber": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Subscriber"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "process"
        ],
        "title": "InputProcess",
        "type": "object"
      },
      "InputValue-Input": {
        "description": "InputValue",
        "properties": {
          "actual_instance": {
            "title": "Actual Instance"
          },
          "any_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "Any Of Schemas",
            "type": "array"
          },
          "anyof_schema_1_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InputValueNoObject-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "anyof_schema_2_validator": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anyof Schema 2 Validator"
          }
        },
        "title": "InputValue",
        "type": "object"
      },
      "InputValue-Output": {
        "description": "InputValue",
        "properties": {
          "actual_instance": {
            "title": "Actual Instance"
          },
          "any_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "Any Of Schemas",
            "type": "array"
          },
          "anyof_schema_1_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InputValueNoObject-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "anyof_schema_2_validator": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anyof Schema 2 Validator"
          }
        },
        "title": "InputValue",
        "type": "object"
      },
      "InputValueNoObject-Input": {
        "description": "InputValueNoObject",
        "properties": {
          "actual_instance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Bbox"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "boolean"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Instance"
          },
          "one_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "One Of Schemas",
            "type": "array"
          },
          "oneof_schema_1_validator": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 1 Validator"
          },
          "oneof_schema_2_validator": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 2 Validator"
          },
          "oneof_schema_3_validator": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 3 Validator"
          },
          "oneof_schema_4_validator": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 4 Validator"
          },
          "oneof_schema_5_validator": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 5 Validator"
          },
          "oneof_schema_6_validator": {
            "anyOf": [
              {
                "format": "binary",
                "type": "string"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 6 Validator"
          },
          "oneof_schema_7_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Bbox"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "InputValueNoObject",
        "type": "object"
      },
      "InputValueNoObject-Output": {
        "description": "InputValueNoObject",
        "properties": {
          "actual_instance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Bbox"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "boolean"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Instance"
          },
          "one_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "One Of Schemas",
            "type": "array"
          },
          "oneof_schema_1_validator": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 1 Validator"
          },
          "oneof_schema_2_validator": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 2 Validator"
          },
          "oneof_schema_3_validator": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 3 Validator"
          },
          "oneof_schema_4_validator": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 4 Validator"
          },
          "oneof_schema_5_validator": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 5 Validator"
          },
          "oneof_schema_6_validator": {
            "anyOf": [
              {
                "format": "binary",
                "type": "string"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 6 Validator"
          },
          "oneof_schema_7_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Bbox"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "InputValueNoObject",
        "type": "object"
      },
      "InputValueNoObjectWorkflows": {
        "description": "InputValueNoObjectWorkflows",
        "properties": {
          "actual_instance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Bbox1"
              },
              {
                "$ref": "#/components/schemas/InputCollection"
              },
              {
                "$ref": "#/components/schemas/InputParameterized"
              },
              {
                "$ref": "#/components/schemas/InputProcess"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "boolean"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Instance"
          },
          "one_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "One Of Schemas",
            "type": "array"
          },
          "oneof_schema_10_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InputParameterized"
              },
              {
                "type": "null"
              }
            ]
          },
          "oneof_schema_1_validator": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 1 Validator"
          },
          "oneof_schema_2_validator": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 2 Validator"
          },
          "oneof_schema_3_validator": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 3 Validator"
          },
          "oneof_schema_4_validator": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 4 Validator"
          },
          "oneof_schema_5_validator": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 5 Validator"
          },
          "oneof_schema_6_validator": {
            "anyOf": [
              {
                "format": "binary",
                "type": "string"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 6 Validator"
          },
          "oneof_schema_7_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Bbox1"
              },
              {
                "type": "null"
              }
            ]
          },
          "oneof_schema_8_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InputCollection"
              },
              {
                "type": "null"
              }
            ]
          },
          "oneof_schema_9_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InputProcess"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "InputValueNoObjectWorkflows",
        "type": "object"
      },
      "InputValueWorkflows": {
        "description": "InputValueWorkflows",
        "properties": {
          "actual_instance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InputValueNoObjectWorkflows"
              },
              {},
              {
                "type": "null"
              }
            ],
            "title": "Actual Instance"
          },
          "one_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "One Of Schemas",
            "type": "array"
          },
          "oneof_schema_1_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InputValueNoObjectWorkflows"
              },
              {
                "type": "null"
              }
            ]
          },
          "oneof_schema_2_validator": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 2 Validator"
          }
        },
        "title": "InputValueWorkflows",
        "type": "object"
      },
      "InputWorkflows": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Bbox1"
          },
          {
            "$ref": "#/components/schemas/InputCollection"
          },
          {
            "$ref": "#/components/schemas/InputParameterized"
          },
          {
            "$ref": "#/components/schemas/InputProcess"
          },
          {
            "items": {},
            "type": "array"
          },
          {
            "type": "boolean"
          },
          {
            "type": "number"
          },
          {
            "type": "integer"
          },
          {
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/Link"
          },
          {
            "$ref": "#/components/schemas/QualifiedInputValueWorkflows"
          },
          {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Bbox1"
                },
                {
                  "$ref": "#/components/schemas/InputCollection"
                },
                {
                  "$ref": "#/components/schemas/InputParameterized"
                },
                {
                  "$ref": "#/components/schemas/InputProcess"
                },
                {
                  "items": {},
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/Link"
                },
                {
                  "$ref": "#/components/schemas/QualifiedInputValueWorkflows"
                }
              ]
            },
            "type": "array"
          }
        ],
        "title": "InputWorkflows"
      },
      "InputWorkflows1": {
        "description": "InputWorkflows1",
        "properties": {
          "actual_instance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InlineOrRefDataWorkflows"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/InlineOrRefDataWorkflows"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Instance"
          },
          "one_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "One Of Schemas",
            "type": "array"
          },
          "oneof_schema_1_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InlineOrRefDataWorkflows"
              },
              {
                "type": "null"
              }
            ]
          },
          "oneof_schema_2_validator": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/InlineOrRefDataWorkflows"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 2 Validator"
          }
        },
        "title": "InputWorkflows1",
        "type": "object"
      },
      "JobControlOptions": {
        "description": "JobControlOptions",
        "enum": [
          "sync-execute",
          "async-execute",
          "dismiss"
        ],
        "title": "JobControlOptions",
        "type": "string"
      },
      "JobList-Input": {
        "description": "JobList",
        "properties": {
          "jobs": {
            "items": {
              "$ref": "#/components/schemas/StatusInfo"
            },
            "title": "Jobs",
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "title": "Links",
            "type": "array"
          }
        },
        "required": [
          "jobs",
          "links"
        ],
        "title": "JobList",
        "type": "object"
      },
      "JobList-Output": {
        "description": "JobList",
        "properties": {
          "jobs": {
            "items": {
              "$ref": "#/components/schemas/StatusInfo"
            },
            "title": "Jobs",
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "title": "Links",
            "type": "array"
          }
        },
        "required": [
          "jobs",
          "links"
        ],
        "title": "JobList",
        "type": "object"
      },
      "LandingPage": {
        "description": "LandingPage",
        "properties": {
          "attribution": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The `attribution` should be short and intended for presentation to a user, for example, in a corner of a map. Parts of the text can be links to other resources if additional information is needed. The string can include HTML markup.",
            "title": "Attribution"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "title": "Links",
            "type": "array"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          }
        },
        "required": [
          "links"
        ],
        "title": "LandingPage",
        "type": "object"
      },
      "Link": {
        "description": "Link",
        "properties": {
          "href": {
            "title": "Href",
            "type": "string"
          },
          "hreflang": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hreflang"
          },
          "rel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rel"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          }
        },
        "required": [
          "href"
        ],
        "title": "Link",
        "type": "object"
      },
      "Metadata-Input": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/MetadataOneOf"
          },
          {
            "$ref": "#/components/schemas/MetadataOneOf1"
          }
        ],
        "title": "Metadata"
      },
      "Metadata-Output": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/MetadataOneOf"
          },
          {
            "$ref": "#/components/schemas/MetadataOneOf1"
          }
        ],
        "title": "Metadata"
      },
      "MetadataOneOf": {
        "description": "MetadataOneOf",
        "properties": {
          "href": {
            "title": "Href",
            "type": "string"
          },
          "hreflang": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hreflang"
          },
          "rel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rel"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          }
        },
        "required": [
          "href"
        ],
        "title": "MetadataOneOf",
        "type": "object"
      },
      "MetadataOneOf1": {
        "description": "MetadataOneOf1",
        "properties": {
          "lang": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lang"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "value": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MetadataOneOf1Value"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "MetadataOneOf1",
        "type": "object"
      },
      "MetadataOneOf1Value": {
        "description": "MetadataOneOf1Value",
        "properties": {
          "actual_instance": {
            "anyOf": [
              {},
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Instance"
          },
          "one_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "One Of Schemas",
            "type": "array"
          },
          "oneof_schema_1_validator": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 1 Validator"
          },
          "oneof_schema_2_validator": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 2 Validator"
          }
        },
        "title": "MetadataOneOf1Value",
        "type": "object"
      },
      "ModelSchema-Input": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "$ref": "#/components/schemas/SchemaOneOf-Input"
          }
        ],
        "title": "ModelSchema"
      },
      "ModelSchema-Output": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "$ref": "#/components/schemas/SchemaOneOf-Output"
          }
        ],
        "title": "ModelSchema"
      },
      "Ogcapppkg": {
        "description": "Ogcapppkg",
        "properties": {
          "executionUnit": {
            "$ref": "#/components/schemas/OgcapppkgExecutionUnit"
          },
          "processDescription": {
            "$ref": "#/components/schemas/Process-Input"
          }
        },
        "required": [
          "processDescription",
          "executionUnit"
        ],
        "title": "Ogcapppkg",
        "type": "object"
      },
      "OgcapppkgExecutionUnit": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/ExecutionUnit"
          },
          {
            "$ref": "#/components/schemas/Link"
          },
          {
            "$ref": "#/components/schemas/QualifiedInputValue-Input"
          },
          {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ExecutionUnit"
                },
                {
                  "$ref": "#/components/schemas/Link"
                },
                {
                  "$ref": "#/components/schemas/QualifiedInputValue-Input"
                }
              ]
            },
            "type": "array"
          }
        ],
        "title": "OgcapppkgExecutionUnit"
      },
      "OutputDescription-Input": {
        "description": "OutputDescription",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "metadata": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Metadata-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "schema": {
            "$ref": "#/components/schemas/ModelSchema-Input"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          }
        },
        "required": [
          "schema"
        ],
        "title": "OutputDescription",
        "type": "object"
      },
      "OutputDescription-Output": {
        "description": "OutputDescription",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "metadata": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Metadata-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "schema": {
            "$ref": "#/components/schemas/ModelSchema-Output"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          }
        },
        "required": [
          "schema"
        ],
        "title": "OutputDescription",
        "type": "object"
      },
      "OutputWorkflows": {
        "description": "OutputWorkflows",
        "properties": {
          "$output": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "$Output"
          },
          "format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Format"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "OutputWorkflows",
        "type": "object"
      },
      "OutputWorkflows1": {
        "description": "OutputWorkflows1",
        "properties": {
          "$output": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "$Output"
          },
          "format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Format"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "OutputWorkflows1",
        "type": "object"
      },
      "Process-Input": {
        "description": "Process",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "inputs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/InputDescription-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "jobControlOptions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/JobControlOptions"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcontroloptions"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Link"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "metadata": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Metadata-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "outputs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/OutputDescription-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "id",
          "version"
        ],
        "title": "Process",
        "type": "object"
      },
      "Process-Output": {
        "description": "Process",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "inputs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/InputDescription-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "jobControlOptions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/JobControlOptions"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcontroloptions"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Link"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "metadata": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Metadata-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "outputs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/OutputDescription-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "id",
          "version"
        ],
        "title": "Process",
        "type": "object"
      },
      "ProcessList-Input": {
        "description": "ProcessList",
        "properties": {
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "title": "Links",
            "type": "array"
          },
          "processes": {
            "items": {
              "$ref": "#/components/schemas/ProcessSummary-Input"
            },
            "title": "Processes",
            "type": "array"
          }
        },
        "required": [
          "processes",
          "links"
        ],
        "title": "ProcessList",
        "type": "object"
      },
      "ProcessList-Output": {
        "description": "ProcessList",
        "properties": {
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "title": "Links",
            "type": "array"
          },
          "processes": {
            "items": {
              "$ref": "#/components/schemas/ProcessSummary-Output"
            },
            "title": "Processes",
            "type": "array"
          }
        },
        "required": [
          "processes",
          "links"
        ],
        "title": "ProcessList",
        "type": "object"
      },
      "ProcessSummary-Input": {
        "description": "ProcessSummary",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "jobControlOptions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/JobControlOptions"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcontroloptions"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Link"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "metadata": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Metadata-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "id",
          "version"
        ],
        "title": "ProcessSummary",
        "type": "object"
      },
      "ProcessSummary-Output": {
        "description": "ProcessSummary",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "jobControlOptions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/JobControlOptions"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcontroloptions"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Link"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "metadata": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Metadata-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "id",
          "version"
        ],
        "title": "ProcessSummary",
        "type": "object"
      },
      "QualifiedInputValue-Input": {
        "description": "QualifiedInputValue",
        "properties": {
          "encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Encoding"
          },
          "mediaType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mediatype"
          },
          "schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FormatSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "value": {
            "$ref": "#/components/schemas/InputValue-Input"
          }
        },
        "required": [
          "value"
        ],
        "title": "QualifiedInputValue",
        "type": "object"
      },
      "QualifiedInputValue-Output": {
        "description": "QualifiedInputValue",
        "properties": {
          "encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Encoding"
          },
          "mediaType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mediatype"
          },
          "schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FormatSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "value": {
            "$ref": "#/components/schemas/InputValue-Output"
          }
        },
        "required": [
          "value"
        ],
        "title": "QualifiedInputValue",
        "type": "object"
      },
      "QualifiedInputValueWorkflows": {
        "description": "QualifiedInputValueWorkflows",
        "properties": {
          "encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Encoding"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "mediaType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mediatype"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FieldsModifiersProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FormatSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "sortBy": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sortby"
          },
          "value": {
            "$ref": "#/components/schemas/InputValueWorkflows"
          }
        },
        "required": [
          "value"
        ],
        "title": "QualifiedInputValueWorkflows",
        "type": "object"
      },
      "Reference": {
        "description": "Reference",
        "properties": {
          "$ref": {
            "title": "$Ref",
            "type": "string"
          }
        },
        "required": [
          "$ref"
        ],
        "title": "Reference",
        "type": "object"
      },
      "Schema1-Input": {
        "description": "Schema1",
        "properties": {
          "actual_instance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Reference"
              },
              {
                "$ref": "#/components/schemas/SchemaOneOf-Input"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Instance"
          },
          "one_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "One Of Schemas",
            "type": "array"
          },
          "oneof_schema_1_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Reference"
              },
              {
                "type": "null"
              }
            ]
          },
          "oneof_schema_2_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchemaOneOf-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "Schema1",
        "type": "object"
      },
      "Schema1-Output": {
        "description": "Schema1",
        "properties": {
          "actual_instance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Reference"
              },
              {
                "$ref": "#/components/schemas/SchemaOneOf-Output"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Instance"
          },
          "one_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "One Of Schemas",
            "type": "array"
          },
          "oneof_schema_1_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Reference"
              },
              {
                "type": "null"
              }
            ]
          },
          "oneof_schema_2_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchemaOneOf-Output"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "Schema1",
        "type": "object"
      },
      "SchemaOneOf-Input": {
        "description": "SchemaOneOf",
        "properties": {
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchemaOneOfAdditionalProperties-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "allOf": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Schema1-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allof"
          },
          "anyOf": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Schema1-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anyof"
          },
          "contentEncoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contentencoding"
          },
          "contentMediaType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contentmediatype"
          },
          "contentSchema": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contentschema"
          },
          "default": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default"
          },
          "deprecated": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Deprecated"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "enum": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "minItems": 1,
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enum"
          },
          "example": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example"
          },
          "exclusiveMaximum": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Exclusivemaximum"
          },
          "exclusiveMinimum": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Exclusiveminimum"
          },
          "format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Format"
          },
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Schema1-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "maxItems": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maxitems"
          },
          "maxLength": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maxlength"
          },
          "maxProperties": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maxproperties"
          },
          "maximum": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maximum"
          },
          "minItems": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "title": "Minitems"
          },
          "minLength": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "title": "Minlength"
          },
          "minProperties": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "title": "Minproperties"
          },
          "minimum": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Minimum"
          },
          "multipleOf": {
            "anyOf": [
              {
                "exclusiveMinimum": 0.0,
                "type": "number"
              },
              {
                "exclusiveMinimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Multipleof"
          },
          "not": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Schema1-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "nullable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Nullable"
          },
          "oneOf": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Schema1-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof"
          },
          "pattern": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pattern"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Schema1-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "readOnly": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Readonly"
          },
          "required": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "uniqueItems": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Uniqueitems"
          },
          "writeOnly": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Writeonly"
          }
        },
        "title": "SchemaOneOf",
        "type": "object"
      },
      "SchemaOneOf-Output": {
        "description": "SchemaOneOf",
        "properties": {
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchemaOneOfAdditionalProperties-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "allOf": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Schema1-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allof"
          },
          "anyOf": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Schema1-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anyof"
          },
          "contentEncoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contentencoding"
          },
          "contentMediaType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contentmediatype"
          },
          "contentSchema": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contentschema"
          },
          "default": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default"
          },
          "deprecated": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Deprecated"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "enum": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "minItems": 1,
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enum"
          },
          "example": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example"
          },
          "exclusiveMaximum": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Exclusivemaximum"
          },
          "exclusiveMinimum": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Exclusiveminimum"
          },
          "format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Format"
          },
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Schema1-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "maxItems": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maxitems"
          },
          "maxLength": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maxlength"
          },
          "maxProperties": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maxproperties"
          },
          "maximum": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maximum"
          },
          "minItems": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "title": "Minitems"
          },
          "minLength": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "title": "Minlength"
          },
          "minProperties": {
            "anyOf": [
              {
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "title": "Minproperties"
          },
          "minimum": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Minimum"
          },
          "multipleOf": {
            "anyOf": [
              {
                "exclusiveMinimum": 0.0,
                "type": "number"
              },
              {
                "exclusiveMinimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Multipleof"
          },
          "not": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Schema1-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "nullable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Nullable"
          },
          "oneOf": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Schema1-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof"
          },
          "pattern": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pattern"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Schema1-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "readOnly": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Readonly"
          },
          "required": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "uniqueItems": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Uniqueitems"
          },
          "writeOnly": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Writeonly"
          }
        },
        "title": "SchemaOneOf",
        "type": "object"
      },
      "SchemaOneOfAdditionalProperties-Input": {
        "description": "SchemaOneOfAdditionalProperties",
        "properties": {
          "actual_instance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Schema1-Input"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Instance"
          },
          "one_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "One Of Schemas",
            "type": "array"
          },
          "oneof_schema_1_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Schema1-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "oneof_schema_2_validator": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 2 Validator"
          }
        },
        "title": "SchemaOneOfAdditionalProperties",
        "type": "object"
      },
      "SchemaOneOfAdditionalProperties-Output": {
        "description": "SchemaOneOfAdditionalProperties",
        "properties": {
          "actual_instance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Schema1-Output"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Instance"
          },
          "one_of_schemas": {
            "items": {
              "type": "string"
            },
            "title": "One Of Schemas",
            "type": "array"
          },
          "oneof_schema_1_validator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Schema1-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "oneof_schema_2_validator": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oneof Schema 2 Validator"
          }
        },
        "title": "SchemaOneOfAdditionalProperties",
        "type": "object"
      },
      "StatusCode": {
        "description": "StatusCode",
        "enum": [
          "accepted",
          "running",
          "successful",
          "failed",
          "dismissed"
        ],
        "title": "StatusCode",
        "type": "string"
      },
      "StatusInfo": {
        "description": "StatusInfo",
        "properties": {
          "created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "exception": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Exception"
              },
              {
                "type": "null"
              }
            ]
          },
          "finished": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished"
          },
          "jobID": {
            "title": "Jobid",
            "type": "string"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Link"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "processID": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processid"
          },
          "progress": {
            "anyOf": [
              {
                "maximum": 100.0,
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress"
          },
          "started": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started"
          },
          "status": {
            "$ref": "#/components/schemas/StatusCode"
          },
          "type": {
            "title": "Type",
            "type": "string"
          },
          "updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          }
        },
        "required": [
          "type",
          "jobID",
          "status"
        ],
        "title": "StatusInfo",
        "type": "object"
      },
      "Subscriber": {
        "description": "Optional URIs for callbacks for this job.  Support for this parameter is not required and the parameter may be removed from the API definition, if conformance class **'callback'** is not listed in the conformance declaration under `/conformance`.",
        "properties": {
          "failedUri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Faileduri"
          },
          "inProgressUri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inprogressuri"
          },
          "successUri": {
            "title": "Successuri",
            "type": "string"
          }
        },
        "required": [
          "successUri"
        ],
        "title": "Subscriber",
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "This document is an API definition document provided alongside the OGC API - Processes standard. The OGC API - Processes Standard specifies a processing interface to communicate over a RESTful protocol using JavaScript Object Notation (JSON) encodings. The specification allows for the wrapping of computational tasks into executable processes that can be offered by a server and be invoked by a client application.",
    "title": "Unity Processing API conforming to the Draft of OGC API - Processes - Part 2: Deploy, Replace, Undeploy",
    "version": "2.0.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "get_landing_page__get",
        "parameters": [
          {
            "description": "The format of the response. If no value is provided, the accept header is used to determine the format. Accepted values are &#39;json&#39; or &#39;html&#39;.",
            "in": "query",
            "name": "f",
            "required": false,
            "schema": {
              "description": "The format of the response. If no value is provided, the accept header is used to determine the format. Accepted values are &#39;json&#39; or &#39;html&#39;.",
              "title": "F",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LandingPage"
                }
              }
            },
            "description": "The landing page provides links to the API definition (link relation &#x60;service-desc&#x60;, in this case path &#x60;/api&#x60;), to the Conformance declaration (path &#x60;/conformance&#x60;, link relation &#x60;http://www.opengis.net/def/rel/ogc/1.0/conformance&#x60;), and to other resources."
          },
          "406": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "Content negotiation failed. For example, the &#x60;Accept&#x60; header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "A server error occurred."
          }
        },
        "summary": "Retrieve the OGC API landing page for this service.",
        "tags": [
          "Landing Page"
        ]
      }
    },
    "/api": {
      "get": {
        "operationId": "get_api_api_get",
        "parameters": [
          {
            "description": "The format of the response. If no value is provided, the accept header is used to determine the format. Accepted values are &#39;json&#39; or &#39;html&#39;.",
            "in": "query",
            "name": "f",
            "required": false,
            "schema": {
              "description": "The format of the response. If no value is provided, the accept header is used to determine the format. Accepted values are &#39;json&#39; or &#39;html&#39;.",
              "title": "F",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Get Api Api Get"
                }
              }
            },
            "description": "The OpenAPI definition of the API."
          },
          "406": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "Content negotiation failed. For example, the &#x60;Accept&#x60; header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "A server error occurred."
          }
        },
        "summary": "Retrieve this API definition.",
        "tags": [
          "API"
        ]
      }
    },
    "/api/processes-list": {
      "get": {
        "operationId": "get_api_processes_api_processes_list_get",
        "parameters": [
          {
            "description": "The format of the response. If no value is provided, the accept header is used to determine the format. Accepted values are &#39;json&#39; or &#39;html&#39;.",
            "in": "query",
            "name": "f",
            "required": false,
            "schema": {
              "description": "The format of the response. If no value is provided, the accept header is used to determine the format. Accepted values are &#39;json&#39; or &#39;html&#39;.",
              "title": "F",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enumeration"
                }
              }
            },
            "description": "An enumerated list of valid string values for API parameters."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "The requested resource does not exist on the server. For example, a path parameter had an incorrect value."
          },
          "406": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "Content negotiation failed. For example, the &#x60;Accept&#x60; header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "A server error occurred."
          }
        },
        "summary": "Retrieve the list of processes available from this API implementation &amp; deployment.",
        "tags": [
          "API"
        ]
      }
    },
    "/conformance": {
      "get": {
        "operationId": "get_conformance_conformance_get",
        "parameters": [
          {
            "description": "The format of the response. If no value is provided, the accept header is used to determine the format. Accepted values are &#39;json&#39; or &#39;html&#39;.",
            "in": "query",
            "name": "f",
            "required": false,
            "schema": {
              "description": "The format of the response. If no value is provided, the accept header is used to determine the format. Accepted values are &#39;json&#39; or &#39;html&#39;.",
              "title": "F",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfClasses"
                }
              }
            },
            "description": "The URIs of all conformance classes supported by the server  To support \\&quot;generic\\&quot; clients that want to access multiple OGC API - Processes implementations - and not \\&quot;just\\&quot; a specific API / server, the server declares the conformance classes it implements and conforms to."
          },
          "406": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "Content negotiation failed. For example, the &#x60;Accept&#x60; header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "A server error occurred."
          }
        },
        "summary": "Retrieve the set of OGC API conformance classes that are supported by this service.",
        "tags": [
          "Conformance"
        ]
      }
    },
    "/health": {
      "get": {
        "description": "Retrieves the health status of the API.",
        "operationId": "get_health_health_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheck"
                }
              }
            },
            "description": "The health status of the API."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "A server error occurred."
          }
        },
        "summary": "Retrieve the health status of the API.",
        "tags": [
          "Health"
        ]
      }
    },
    "/jobs": {
      "get": {
        "description": "Lists available jobs.  For more information, see [Section 12](https://docs.ogc.org/is/18-062r2/18-062r2.html#Job_list).",
        "operationId": "get_jobs_jobs_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobList-Input"
                }
              }
            },
            "description": "A list of jobs for this process."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "The requested resource does not exist on the server. For example, a path parameter had an incorrect value."
          }
        },
        "summary": "retrieve the list of jobs.",
        "tags": [
          "Jobs"
        ]
      }
    },
    "/jobs/{jobId}": {
      "delete": {
        "description": "Cancel a job execution and remove it from the jobs list.  For more information, see [Section 14]https://docs.ogc.org/is/18-062r2/18-062r2.html#Dismiss).",
        "operationId": "dismiss_jobs__jobId__delete",
        "parameters": [
          {
            "description": "local identifier of a job",
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "description": "local identifier of a job",
              "title": "Jobid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusInfo"
                }
              }
            },
            "description": "The status of a job."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "The requested resource does not exist on the server. For example, a path parameter had an incorrect value."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "A server error occurred."
          }
        },
        "summary": "cancel a job execution, remove a finished job",
        "tags": [
          "Jobs"
        ]
      },
      "get": {
        "description": "Shows the status of a job.   For more information, see [Section 7.10](https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_retrieve_status_info).",
        "operationId": "get_status_jobs__jobId__get",
        "parameters": [
          {
            "description": "local identifier of a job",
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "description": "local identifier of a job",
              "title": "Jobid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusInfo"
                }
              }
            },
            "description": "The status of a job."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "The requested resource does not exist on the server. For example, a path parameter had an incorrect value."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "A server error occurred."
          }
        },
        "summary": "retrieve the status of a job",
        "tags": [
          "Jobs"
        ]
      }
    },
    "/jobs/{jobId}/results": {
      "get": {
        "description": "Lists available results of a job. In case of a failure, lists exceptions instead.  For more information, see [Section 7.11](https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_retrieve_job_results).",
        "operationId": "get_result_jobs__jobId__results_get",
        "parameters": [
          {
            "description": "local identifier of a job",
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "description": "local identifier of a job",
              "title": "Jobid",
              "type": "string"
            }
          },
          {
            "description": "Indicates client preferences, such as whether the client wishes a self-contained or minimal response. A &#x60;return&#x3D;minimal&#x60; preference indicates that the client would prefer that links be returned to larger object to minimize the response payload. A &#x60;return&#x3D;representation&#x60; indicates that the client would prefer if the server can return a self-contained response.",
            "in": "header",
            "name": "prefer",
            "required": false,
            "schema": {
              "description": "Indicates client preferences, such as whether the client wishes a self-contained or minimal response. A &#x60;return&#x3D;minimal&#x60; preference indicates that the client would prefer that links be returned to larger object to minimize the response payload. A &#x60;return&#x3D;representation&#x60; indicates that the client would prefer if the server can return a self-contained response.",
              "title": "Prefer",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/InlineOrRefData-Input"
                  },
                  "title": "Response 200 Get Result Jobs  Jobid  Results Get",
                  "type": "object"
                }
              }
            },
            "description": "The processing results of a job."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "The requested resource does not exist on the server. For example, a path parameter had an incorrect value."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "A server error occurred."
          }
        },
        "summary": "retrieve the result(s) of a job",
        "tags": [
          "Jobs"
        ]
      }
    },
    "/processes": {
      "get": {
        "description": "The list of processes contains a summary of each process the OGC API - Processes offers, including the link to a more detailed description of the process.  For more information, see [Section 7.7]https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_process_list).",
        "operationId": "get_processes_processes_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessList-Input"
                }
              }
            },
            "description": "Information about the available processes"
          }
        },
        "summary": "retrieve the list of available processes",
        "tags": [
          "Processes"
        ]
      },
      "post": {
        "description": "Deploys a process.  For more information, see [Section 6.3](http://docs.ogc.org/DRAFTS/20-044.html#_87a6983e-d060-458c-95ab-27e232e64822).",
        "operationId": "deploy_processes_post",
        "parameters": [
          {
            "description": "Point to the workflow identifier for deploying a CWL containing multiple workflow definitions",
            "in": "query",
            "name": "w",
            "required": false,
            "schema": {
              "description": "Point to the workflow identifier for deploying a CWL containing multiple workflow definitions",
              "title": "W",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Ogcapppkg"
                  }
                ],
                "description": "An OGC Application Package used to deploy a new process.",
                "title": "Ogcapppkg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "201": {
            "description": "Created"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "the processes is not mutable"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "the processes being added is already deployed (i.e. duplicate)"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "A server error occurred."
          }
        },
        "summary": "deploy a process.",
        "tags": [
          "DRU"
        ]
      }
    },
    "/processes/{processId}": {
      "delete": {
        "description": "Undeploys a process. For more information, see [Section 6.5](http://docs.ogc.org/DRAFTS/20-044.html#_16391f9e-538f-4a84-9710-72a6bab82842).",
        "operationId": "undeploy_processes__processId__delete",
        "parameters": [
          {
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "title": "Processid",
              "type": "string"
            }
          },
          {
            "description": "Force undeployment even if there are active DAG runs",
            "in": "query",
            "name": "force",
            "required": false,
            "schema": {
              "default": false,
              "description": "Force undeployment even if there are active DAG runs",
              "title": "Force",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "204": {
            "description": "successful operation (no response body)"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "the processes is not mutable"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "The requested resource does not exist on the server. For example, a path parameter had an incorrect value."
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "The process has active DAG runs and force is not set to true."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "A server error occurred."
          }
        },
        "summary": "undeploy a process.",
        "tags": [
          "DRU"
        ]
      },
      "get": {
        "description": "The process description contains information about inputs and outputs and a link to the execution-endpoint for the process. The Core does not mandate the use of a specific process description to specify the interface of a process. That said, the Core requirements class makes the following recommendation:  Implementations SHOULD consider supporting the OGC process description.  For more information, see [Section 7.8](https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_process_description).",
        "operationId": "get_process_description_processes__processId__get",
        "parameters": [
          {
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "title": "Processid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Process-Input"
                }
              }
            },
            "description": "A process description."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "The requested resource does not exist on the server. For example, a path parameter had an incorrect value."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "retrieve a process description",
        "tags": [
          "Processes"
        ]
      },
      "put": {
        "description": "Replaces a process.  For more information, see [Section 6.4](http://docs.ogc.org/DRAFTS/20-044.html#_18582f42-ebc6-4284-9333-c089068f62b6).",
        "operationId": "replace_processes__processId__put",
        "parameters": [
          {
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "title": "Processid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Ogcapppkg"
                  }
                ],
                "description": "An OGC Application Package used to deploy a new process.",
                "title": "Ogcapppkg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "204": {
            "description": "successful operation (no response body)"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "the processes is not mutable"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "The requested resource does not exist on the server. For example, a path parameter had an incorrect value."
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "the processes being added is already deployed (i.e. duplicate)"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "A server error occurred."
          }
        },
        "summary": "replace a process.",
        "tags": [
          "DRU"
        ]
      }
    },
    "/processes/{processId}/execution": {
      "post": {
        "description": "Executes a process (this may result in the creation of a job resource e.g., for _asynchronous execution_).  For more information, see [Section 7.9](https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_create_job).",
        "operationId": "execute_processes__processId__execution_post",
        "parameters": [
          {
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "title": "Processid",
              "type": "string"
            }
          },
          {
            "description": "For executing the process using the _Collection Output_ mechanism, where the client is redirected (_303_ status) to either an OGC API landing page or collection resource, from which one or more OGC API data access mechanism is available. Data access requests may trigger processing on-demand for a given area, time and resolution of interest.",
            "in": "query",
            "name": "response",
            "required": false,
            "schema": {
              "description": "For executing the process using the _Collection Output_ mechanism, where the client is redirected (_303_ status) to either an OGC API landing page or collection resource, from which one or more OGC API data access mechanism is available. Data access requests may trigger processing on-demand for a given area, time and resolution of interest.",
              "title": "Response",
              "type": "string"
            }
          },
          {
            "description": "Indicates client preferences, including whether the client is capable of asynchronous processing. A &#x60;respond-async&#x60; preference indicates a preference for asynchronous processing. A &#x60;wait: &lt;x&gt;s&#x60; preference indicates that the client prefers to wait up to x seconds to receive a reponse synchronously before the server falls back to asynchronous processing.",
            "in": "header",
            "name": "prefer",
            "required": false,
            "schema": {
              "description": "Indicates client preferences, including whether the client is capable of asynchronous processing. A &#x60;respond-async&#x60; preference indicates a preference for asynchronous processing. A &#x60;wait: &lt;x&gt;s&#x60; preference indicates that the client prefers to wait up to x seconds to receive a reponse synchronously before the server falls back to asynchronous processing.",
              "title": "Prefer",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExecuteWorkflows"
                  }
                ],
                "description": "An execution request specifying any inputs for the process to execute, and optionally to select specific outputs.",
                "title": "Execute Workflows"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Execute200Response-Input"
                }
              }
            },
            "description": "Result of synchronous execution"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusInfo"
                }
              }
            },
            "description": "Started asynchronous execution. Created job."
          },
          "303": {
            "description": "For _Collection Output_ execution, redirection to an OGC API landing page or collection."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "The requested resource does not exist on the server. For example, a path parameter had an incorrect value."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            },
            "description": "A server error occurred."
          }
        },
        "summary": "execute a process.",
        "tags": [
          "Processes"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}
